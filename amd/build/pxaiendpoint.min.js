define("assignsubmission_pxaiwriter/pxaiendpoint",["exports","jquery","core/ajax","core/notification"],(function(_exports,_jquery,_ajax,_notification){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _classPrivateMethodInitSpec(obj,privateSet){!function(obj,privateCollection){if(privateCollection.has(obj))throw new TypeError("Cannot initialize the same private elements twice on an object")}(obj,privateSet),privateSet.add(obj)}function _classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver))throw new TypeError("attempted to get private field on non-instance");return fn}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_jquery=_interopRequireDefault(_jquery),_ajax=_interopRequireDefault(_ajax),_notification=_interopRequireDefault(_notification);var _requestAIApi=new WeakSet;class Api{constructor(){_classPrivateMethodInitSpec(this,_requestAIApi)}expandText(assignmentId,submissionId,text,selectedText,selectStart){let step=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;return _classPrivateMethodGet(this,_requestAIApi,_requestAIApi2).call(this,"assignsubmission_pxaiwriter_expand_ai_text",{assignment_id:assignmentId,submission:submissionId,text:text,selected_text:selectedText,select_start:selectStart,step:step})}generateText(assignmentId,submissionId,text){let step=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return _classPrivateMethodGet(this,_requestAIApi,_requestAIApi2).call(this,"assignsubmission_pxaiwriter_generate_ai_text",{assignment_id:assignmentId,submission:submissionId,text:text,step:step})}recordHistory(assignmentId,submissionId,text){let step=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return _classPrivateMethodGet(this,_requestAIApi,_requestAIApi2).call(this,"assignsubmission_pxaiwriter_record_history",{assignment_id:assignmentId,submission:submissionId,text:text,step:step})}}function _requestAIApi2(methodName){let parameters=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return _ajax.default.call([{methodname:methodName,args:parameters}])[0]}class EventCreator{constructor(assignmentId,submissionId,stepNumber,maxAttempts,attemptsCount){_defineProperty(this,"defaultStep",1),_defineProperty(this,"properties",{checksumList:{}}),_defineProperty(this,"component","assignsubmission_pxaiwriter"),_defineProperty(this,"eventList",{pageChange:"page-change",stepTextSave:"step-save"}),_defineProperty(this,"selectors",{wrapper:".assignsubmission_pxaiwriter",doAIMagic:"#pxaiwriter-do-ai-magic",expandSelection:"#pxaiwriter-expand-selection",input:".pxaiwriter-student-data[data-input-step]",maxAttemptsErrorMessage:"#assignsubmission_pxaiwriter_max_attempts_message"}),this.currentStep=stepNumber,this.maxAttempts=maxAttempts,this.attemptsCount=attemptsCount,this.assignmentId=assignmentId,this.submissionId=submissionId,this.api=new Api,this.init()}init(){var _document$querySelect,_document$querySelect2;this.preventPasting(this.selectors.input);const blurStepButton=button=>{button instanceof HTMLElement&&button.classList.remove("current")},wrapper=document.querySelector(this.selectors.wrapper);null==wrapper||wrapper.addEventListener(this.eventList.pageChange,(e=>{this.isDebugMode()&&window.console.log("".concat(this.component,": Step switched..."));let step=this.getCurrentStepByPageChangeEvent(e);const currentStepButton=document.querySelector('.step-page-button[data-step-number="'.concat(step,'"]'));if(!currentStepButton)return;const allStepButtons=document.querySelectorAll(".step-page-button[data-step-number]");for(const button of allStepButtons)blurStepButton(button);var button;(button=currentStepButton)instanceof HTMLElement&&button.classList.add("current"),this.copyTextFromPreviousStep(step)})),null==wrapper||wrapper.addEventListener(this.eventList.pageChange,(async e=>{this.isDebugMode()&&window.console.log("".concat(this.component,": Page changed"));const step=this.getPreviousStepByPageChangeEvent(e);await this.recordHistory(step)})),null===(_document$querySelect=document.querySelector(this.selectors.expandSelection))||void 0===_document$querySelect||_document$querySelect.addEventListener("click",(async e=>{this.isDebugMode()&&window.console.log("".concat(this.component,": Expand selected text..."));const step=this.getStepNumber(e.target),textData=this.getStepTextAreaData(step),text=textData.text,selectedText=null==textData?void 0:textData.selectedText;if(this.validateInputText(selectedText)){this.loadingData();try{const response=await this.api.expandText(this.assignmentId,this.submissionId,text,selectedText,textData.selectionStart);this.setApiResponseToInput(this.currentStep,response),this.updateAIButtonState(),await this.dispatchHistoryFromInput()}catch(exception){await _notification.default.exception(exception)}}else this.isDebugMode()&&window.console.warn("".concat(this.component,": No selection detected"))})),null===(_document$querySelect2=document.querySelector(this.selectors.doAIMagic))||void 0===_document$querySelect2||_document$querySelect2.addEventListener("click",(async e=>{this.isDebugMode()&&window.console.log("".concat(this.component,": Do AI magic..."));const text=this.getStepInputText(this.getStepNumber(e.target));if(this.validateInputText(text)){this.loadingData();try{const response=await this.api.generateText(this.assignmentId,this.submissionId,text,this.defaultStep);this.attemptsCount++,this.setApiResponseToInput(this.currentStep,response),this.updateAIButtonState(),await this.dispatchHistoryFromInput()}catch(exception){await _notification.default.exception(exception)}}else this.isDebugMode()&&window.console.warn("".concat(this.component,": Input text is empty"))})),document.querySelectorAll("textarea.pxaiwriter-student-data").forEach((async element=>{const step=this.getNumberFromAttribute(element,"data-input-step");if(step<1)return;const checksum=await this.getHashCode(element.value);this.setChecksumByStep(step,checksum)}))}getChecksumByStep(step){var _this$properties$chec;return null!==(_this$properties$chec=this.properties.checksumList[step])&&void 0!==_this$properties$chec?_this$properties$chec:""}setChecksumByStep(step,checksum){this.properties.checksumList[step]=checksum}getNumberFromAttribute(element,attribute){const value=null==element?void 0:element.getAttribute(attribute);if(!value)return;const number=Number.parseInt(value);return Number.isNaN(number)?void 0:number}getStepInput(step){const element=document.querySelector("".concat(this.selectors.input,'[data-input-step="').concat(step,'"]'));return element instanceof HTMLTextAreaElement?element:null}copyTextFromPreviousStep(step){this.isDebugMode()&&window.console.log("".concat(this.component,": Try to copy the text from the previous step to step ").concat(step,"..."));const currentStepInput=this.getStepInput(step);if(null===currentStepInput)return void(this.isDebugMode()&&window.console.log("".concat(this.component,": Cannot find the current step ").concat(step)));if(0!==currentStepInput.value.trim().length)return void(this.isDebugMode()&&window.console.log("".concat(this.component,": Cannot copy because the current step (").concat(step,") is not empty")));const previousStep=step-1,previousStepInput=this.getStepInput(previousStep);null!==previousStepInput?0!==previousStepInput.value.trim().length?(currentStepInput.value=previousStepInput.value,this.isDebugMode()&&window.console.log("".concat(this.component,": Copied the text from step ").concat(previousStep," to ").concat(step))):this.isDebugMode()&&window.console.log("".concat(this.component,": Cannot copy because the previous step (").concat(step,") is empty")):this.isDebugMode()&&window.console.log("".concat(this.component,": Cannot find the previous step ").concat(previousStep))}preventPasting(target){const elements=document.querySelectorAll(target);if(elements)for(const element of elements)element.addEventListener("keydown",(event=>!event.ctrlKey||"v"!==event.key||(event.preventDefault(),event.stopPropagation(),!1))),element.addEventListener("paste",(event=>(event.preventDefault(),event.stopPropagation(),!1)))}isDebugMode(){var _M,_M$cfg;return!(null===(_M=M)||void 0===_M||null===(_M$cfg=_M.cfg)||void 0===_M$cfg||!_M$cfg.developerdebug)}setRemainingAttemptText(text){if(!text)return;const label=document.querySelector(".remaining-ai-attempts");label instanceof HTMLElement&&(label.innerHTML=text)}getStepTextArea(step){return document.querySelector('textarea[name="pxaiwriter-data-step-'.concat(step,'"]'))}getStepNumber(element){var _element$dataset;const currentStep=Number.parseInt(null==element||null===(_element$dataset=element.dataset)||void 0===_element$dataset?void 0:_element$dataset.step);return Number.isNaN(currentStep)?0:currentStep}getStepTextAreaData(step){const textArea=this.getStepTextArea(step);return textArea instanceof HTMLTextAreaElement?{text:textArea.value,selectedText:textArea.value.substring(textArea.selectionStart,textArea.selectionEnd),selectionStart:textArea.selectionStart,selectionEnd:textArea.selectionEnd}:null}getStepInputText(step){var _this$getStepTextArea,_this$getStepTextArea2;return null!==(_this$getStepTextArea=null===(_this$getStepTextArea2=this.getStepTextArea(step))||void 0===_this$getStepTextArea2?void 0:_this$getStepTextArea2.value)&&void 0!==_this$getStepTextArea?_this$getStepTextArea:""}validateInputText(text){return!(!text||0===text.length)||((0,_jquery.default)("#title-required-warning-modal").modal("show"),!1)}loadingData(){(0,_jquery.default)(":button").prop("disabled",!0),(0,_jquery.default)("#loader").removeClass("d-none")}getCurrentStepByPageChangeEvent(event){var _event$detail;return null==event||null===(_event$detail=event.detail)||void 0===_event$detail?void 0:_event$detail.currentStep}getPreviousStepByPageChangeEvent(event){var _event$detail2;const currentStep=this.getCurrentStepByPageChangeEvent(event),prevStep=null==event||null===(_event$detail2=event.detail)||void 0===_event$detail2?void 0:_event$detail2.prevStep;return currentStep===prevStep?0:prevStep}async getHashCode(text){if(!text)return null;try{const buffer=(new TextEncoder).encode(text),raw=await crypto.subtle.digest("SHA-256",buffer);return Array.from(new Uint8Array(raw)).map((b=>b.toString(16).padStart(2,"0"))).join("")}catch(e){return""}}setApiResponseToInput(step,response){if((0,_jquery.default)(":button").prop("disabled",!1),response.hasOwnProperty("attempt_text")&&this.setRemainingAttemptText(response.attempt_text),response.hasOwnProperty("data")){const textArea=this.getStepTextArea(step);textArea instanceof HTMLTextAreaElement&&(textArea.value=response.data,textArea.dispatchEvent(new Event("change")))}(0,_jquery.default)("#loader").addClass("d-none")}updateAIButtonState(){const buttons=document.querySelectorAll(this.selectors.doAIMagic+", "+this.selectors.expandSelection);this.isDebugMode()&&window.console.log("".concat(this.component,": Updating button states, attempt ").concat(this.attemptsCount," of ").concat(this.maxAttempts,"..."));const isDisabled=this.attemptsCount>=this.maxAttempts;buttons.forEach((button=>{button.disabled=isDisabled,button.classList.toggle("d-none",isDisabled)})),document.querySelector(this.selectors.maxAttemptsErrorMessage).classList.toggle("d-none",!isDisabled)}async recordHistory(step){if(this.isDebugMode()&&window.console.log("".concat(this.component,": Saving history...")),step<1)return void(this.isDebugMode()&&window.console.log("".concat(this.component,": Nothing to be save...")));const text=this.getStepInputText(step);if(await this.getHashCode(text)===this.getChecksumByStep(step))return void(this.isDebugMode()&&window.console.log("".concat(this.component,": Nothing has been changed")));const response=await this.api.recordHistory(this.assignmentId,this.submissionId,text,step);this.updateAIButtonState(),this.setChecksumByStep(step,response.checksum),this.isDebugMode()&&window.console.log("".concat(this.component,": Input text got recorded"))}async dispatchHistoryFromInput(){const elements=document.querySelectorAll(this.selectors.input);for(const element of elements)element instanceof HTMLTextAreaElement&&await this.recordHistory(this.getStepNumber(element))}}_exports.init=function(assignmentId,submissionId){let stepNumber=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,maxAttempts=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2,attemptsCount=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;return new EventCreator(assignmentId,submissionId,stepNumber,maxAttempts,attemptsCount)}}));

//# sourceMappingURL=pxaiendpoint.min.js.map